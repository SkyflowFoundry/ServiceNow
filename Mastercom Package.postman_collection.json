{
	"info": {
		"_postman_id": "44e56725-839f-4d10-99ce-d4f99f643f6d",
		"name": "Mastercom Package",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18388553"
	},
	"item": [
		{
			"name": "FunctionEnvironment: Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var vardata = JSON.parse(responseBody);",
							"pm.environment.set(\"functionEnvironmentID\", vardata.functionEnvironmentID);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-REQUEST-FUNCTION-API-KEY",
						"value": "{{functionToken}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "X-SKYFLOW-ACCOUNT-ID",
						"value": "{{accountID}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"mastercom_env\",\n    \"description\": \"test environment\",\n    \"isDefault\": false,\n    \"variables\": [\n        {\n            \"name\": \"signingKey\",\n              \"value\": \"-----BEGIN RSA PRIVATE KEY-----\\nxxxxx-----END RSA PRIVATE KEY-----\",\n            \"type\": \"SECRET\"\n        },\n        {\n            \"name\": \"consumerKey\",\n            \"value\": \"xxxxx\",\n            \"type\": \"SECRET\"\n        },\n        {\n            \"name\": \"vaultURL\",\n            \"value\": \"{{vaultURL}}\",\n            \"type\": \"PLAIN_TEXT\"\n        },\n        {\n            \"name\": \"vaultID\",\n            \"value\": \"{{vaultID}}\",\n            \"type\": \"PLAIN_TEXT\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{manageURL}}/v1/functionEnvironments",
					"host": [
						"{{manageURL}}"
					],
					"path": [
						"v1",
						"functionEnvironments"
					]
				}
			},
			"response": [
				{
					"name": "FunctionEnvironment: Create",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "X-REQUEST-FUNCTION-API-KEY",
								"value": "{{functionToken}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "X-SKYFLOW-ACCOUNT-ID",
								"value": "{{accountID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"mastercom_env\",\n    \"description\": \"test environment\",\n    \"isDefault\": false,\n    \"variables\": [\n        {\n            \"name\": \"signingKey\",\n              \"value\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEowIBAAKCAQEAhvuRlWefc90uBsQMFvjG1RDqNoZduAB0CYnNzUW8z36epEPh\\ntFUe7kg+0dcaQenMLVRUVG2Yyj573KlG3Ir7LzQaHrKwzdfGNVwaKz3fXqrCD3o5\\ngKCvISIACAr8dPKXRcdNb69jdiVACPXMrdOXNwJClv1vfaTSz2mUvXVXQnPGlpPj\\nkWD0XtsFDf62pxW66xnx2yHP7DSIDozLVr5O3G8yxjh0uxzgTQj2L+i4D7besoCN\\nF4HyQ1dbo/wteCzJtjGVLKdyTW0k2/e8oO/rLXU2jI7i21lRL1YzhoJepWnY0gDZ\\n7J13PMM0PBSy5nRRDdjvsOzJ+rbXzg/ajLPPRwIDAQABAoIBAGD1rCnJ+Xvc0QcD\\nJDwMD6dVMyhfdEqL6M5BMpfVFD9oEMSmDibfTgyT0Kwi+zWFn6if/sN2xl3gbFCh\\nN8mL+8p4fpq2eNIjwLjro9CT7TOvLR65CT0gLyx5o9QjMB1BdPAmrbUgIy3mrAzD\\no3bpmqFk+jhDbCawks1yZemBtGCCgsDstZWRGljen0xORipNK3E3OGASIIidDIgs\\nznlmK24S3IKm9iOo41CKRiAnNEDL1WWTGjwmN5t75Ive8HwhWQU0xYoyJM7UhEe5\\n77c1V/g7TDFd8R6H/Rv6TYHr+vd0/UxnRJScfkTr6HB3gRTTWDn7u9bK5EOkItxq\\nVA2LVSECgYEA28H8Ge20Wba4eQuZNVVI6RJ8cJSRwvtuFZZaepKK/M8aY+jWDQhW\\nMkIPzV34ctm0EPeZwUXXGpcWRVg4M3LcTL/ATIGn6iWfow7fa2gJyYx0juDo0jLX\\nKxQe7C2tBk9uTBZ9euwlCUO2jyXr6OABofIr3mqXqiVhP04lohsn4nUCgYEAnT5w\\n/XZOe8IUc16/SMLT0HwLtsoglvbV3PYA0K2j3HWIbvOjvnP7sfjjgGyWpk/qzJdg\\nshy1ogBUJEioZKH2eMtMZjDtZWPwpDYqya3Pfe+j5uDdR7A5bwT3fltTp4nGRltj\\nQnxMj8+1aWWZIVB9W8pd95JidqdevV3NHRoVu0sCgYBdxLwJZEAcN7cnDyfkdeuS\\nZ+zpLLu1cwtZ8rnQq07a6JPeJa+QCAqfj0im3H3yo6oNw1i7+0z5b5Z1KFtyuIP/\\ny6IGAxze8AbZ0LLMZawnb+McRCOT7VWacA9xv1ug4auyk7YfCTwUY+w10HyE9XA8\\n5dSKJvloBGMmW/X64ZN3MQKBgQCFBAAy+TRVDo2cNscbduwVTgneu8erzOyG+Xch\\nD/IwmSArs2CNyLFfEQrqZXFfCPW30kpTAWRIwXxsISaJ0lScRGXBgJwhi9RSJRw2\\n9Rg0EVcWBJxLe3BqUMpIEluGu06Fz+L8qAdgFDYDDZXnD56r2ll5B1TRyK2lBUdw\\n2dMOVwKBgAoecvqLWIIJOpsAbMAs7m61/A08oLdLFiFcAOAtdGpROY47JX348XOS\\nE44LHLHggCqAywefiDLUPn7D8HioyCE+PhQg/f79izODii3voEd5/ZiOtWPpgiM2\\nk+gvTwcLmOp3L7Ah5KKg4NdsE9TSHBumV6Kll664CFHdfyscSk3o\\n-----END RSA PRIVATE KEY-----\",\n            \"type\": \"SECRET\"\n        },\n        {\n            \"name\": \"consumerKey\",\n            \"value\": \"eLOhQ1mI8g9RdeaCOqExkl9j1lqKqxVL84g6vLxj0e7534eb!f344280eee1a41c9b91f38be3789a0d40000000000000000\",\n            \"type\": \"SECRET\"\n        },\n        {\n            \"name\": \"vaultURL\",\n            \"value\": \"{{vaultURL}}\",\n            \"type\": \"PLAIN_TEXT\"\n        },\n        {\n            \"name\": \"vaultID\",\n            \"value\": \"{{vaultID}}\",\n            \"type\": \"PLAIN_TEXT\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{manageURL}}/v1/functionEnvironments",
							"host": [
								"{{manageURL}}"
							],
							"path": [
								"v1",
								"functionEnvironments"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 05 Mar 2025 01:59:00 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-request-id",
							"value": "d0ec9b39-1495-4190-9b0f-84d911ad42d1"
						},
						{
							"key": "x-skyflow-trace-id",
							"value": "25eeb15af2f69152f85893d4b3a37261"
						},
						{
							"key": "x-envoy-upstream-service-time",
							"value": "4055"
						},
						{
							"key": "strict-transport-security",
							"value": "max-age=31536000; includeSubDomains; preload"
						},
						{
							"key": "content-security-policy",
							"value": "frame-ancestors none;"
						},
						{
							"key": "x-frame-options",
							"value": "deny"
						},
						{
							"key": "x-xss-protection",
							"value": "1; mode=block"
						},
						{
							"key": "x-content-type-options",
							"value": "nosniff"
						},
						{
							"key": "referrer-policy",
							"value": "no-referrer"
						},
						{
							"key": "x-download-options",
							"value": "noopen"
						},
						{
							"key": "x-dns-prefetch-control",
							"value": "off"
						},
						{
							"key": "permissions-policy",
							"value": "camera 'none';microphone 'none';geolocation 'none';encrypted-media 'none';payment 'none';speaker 'none';usb 'none';"
						},
						{
							"key": "cf-cache-status",
							"value": "DYNAMIC"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "91b602daf89c7157-YUL"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						}
					],
					"cookie": [],
					"body": "{\n    \"functionEnvironmentID\": \"eb21631a279247d4aa63cfcd922a2f23\",\n    \"functionEnvironmentName\": \"mastercom_env\",\n    \"functionEnvironmentDescription\": \"test environment\",\n    \"isDefault\": false\n}"
				}
			]
		},
		{
			"name": "Function: Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var vardata = JSON.parse(responseBody);",
							"pm.environment.set(\"functionID\", vardata.ID);",
							"pm.environment.set(\"deploymentID\", vardata.deploymentID);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-SKYFLOW-ACCOUNT-ID",
						"value": "{{accountID}}",
						"type": "text"
					},
					{
						"key": "X-REQUEST-FUNCTION-API-KEY",
						"value": "{{functionToken}}",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Mastercom Function\",\n    \"description\": \"Function to invoke Mastercom\",\n    \"code\": \"const axios = require('axios');\\nconst oauth = require('mastercard-oauth1-signer');\\n\\nconst { signingKey, consumerKey, vaultID, vaultURL } = process.env;\\n\\n// Don't change the function name. It needs to be skyflowmain.\\nexports.skyflowmain = async (event) => {\\n    try {\\n        // Validate event structure\\n        if (!event || !event.BodyContent || !event.Headers || !event.QueryParam) {\\n            throw new Error(\\\"Invalid event object received.\\\");\\n        }\\n\\n        // Decode and parse request payload safely\\n        let payload;\\n        try {\\n            const request = Buffer.from(event.BodyContent, \\\"base64\\\");\\n            payload = JSON.parse(request.toString());\\n        } catch (error) {\\n            throw new Error(\\\"Failed to decode or parse the request payload: \\\" + error.message);\\n        }\\n\\n        // Extract headers safely\\n        const headers = event.Headers;\\n        if (!headers['X-Skyflow-Authorization'] || !headers['X-Skyflow-Authorization'][0]) {\\n            throw new Error(\\\"Missing or invalid X-Skyflow-Authorization header.\\\");\\n        }\\n        const accessToken = headers['X-Skyflow-Authorization'][0];\\n\\n        if (!headers['X-Request-Audit-Uri-Method'] || !headers['X-Request-Audit-Uri-Method'][0]) {\\n            throw new Error(\\\"Missing or invalid X-Request-Audit-Uri-Method header.\\\");\\n        }\\n        const method = headers['X-Request-Audit-Uri-Method'][0];\\n\\n        if (!event.QueryParam.URI) {\\n            throw new Error(\\\"Missing URI parameter.\\\");\\n        }\\n        const uri = event.QueryParam.URI;\\n\\n        // Detokenization if needed\\n        if (payload.primaryAccountNum) {\\n            try {\\n                let response = await detokenize(accessToken, payload.primaryAccountNum);\\n                if (response && response.data && response.data.records && response.data.records.length > 0) {\\n                    payload.primaryAccountNum = response.data.records[0].value;\\n                } else {\\n                    throw new Error(\\\"Detokenization response missing expected data.\\\");\\n                }\\n            } catch (error) {\\n                console.error(\\\"Detokenization failed: \\\" + error.message);\\n                return { error: \\\"Detokenization failed\\\", details: error.message };\\n            }\\n        }\\n\\n        let data = JSON.stringify(payload);\\n\\n        // Generate OAuth header\\n        let authHeader;\\n        try {\\n            authHeader = oauth.getAuthorizationHeader(uri, method, data, consumerKey, signingKey);\\n        } catch (error) {\\n            throw new Error(\\\"Failed to generate OAuth header: \\\" + error.message);\\n        }\\n\\n        // Call Mastercom\\n        try {\\n            const response = await callMastercom(uri, method, data, authHeader);\\n            return response;\\n        } catch (error) {\\n            console.error(\\\"Error in callMastercom: \\\" + error.message);\\n            return { error: \\\"Mastercom API call failed\\\", details: error.message };\\n        }\\n\\n    } catch (error) {\\n        console.error(\\\"Error in skyflowmain:\\\", error.message);\\n        return { error: \\\"Function execution failed\\\", details: error.message };\\n    }\\n};\\n\\nasync function callMastercom(uri, method, data, authHeader) {\\n    let config = {\\n        method: method,\\n        maxBodyLength: Infinity,\\n        url: uri,\\n        headers: {\\n            'Authorization': authHeader,\\n            'Content-Type': 'application/json',\\n        },\\n        data: data\\n    };\\n\\n    try {\\n        const response = await axios.request(config);\\n        return response.data;\\n    } catch (error) {\\n        console.error(\\\"Axios request failed:\\\", error.message);\\n        return { error: \\\"Axios request failed\\\", details: error.message };\\n    }\\n}\\n\\nasync function detokenize(accessToken, tokenized_pan) {\\n    const url = `${vaultURL}/v1/vaults/${vaultID}/detokenize`;\\n    const headers = {\\n        'Authorization': 'Bearer ' + accessToken,\\n        'Content-Type': 'application/json'\\n    };\\n    const body = {\\n        \\\"detokenizationParameters\\\": [\\n            {\\n                \\\"token\\\": tokenized_pan,\\n                \\\"redaction\\\": \\\"PLAIN_TEXT\\\"\\n            }\\n        ]\\n    };\\n\\n    try {\\n        const resp = await axios.post(url, body, { headers });\\n        return resp;\\n    } catch (error) {\\n        console.error(\\\"Detokenization request failed:\\\", error.message);\\n        return { error: \\\"Detokenization request failed\\\", details: error.message };\\n    }\\n}\",\n    \"functionConfigs\": [\n        {\n            \"resourceConfig\": {\n                \"timeout\": 800,\n                \"memory\": 1000\n            }\n        }\n    ],\n    \"language\": {\n        \"languageName\": \"NODEJS\",\n        \"languageVersion\": \"16.x\"\n    },\n    \"dependencies\": [\"mastercard-oauth1-signer@1.1.6\", \"axios@1.6.5\"],\n    \"functionDeployment\": {\n        \"deploy\": false,\n        \"functionEnvironmentID\": \"{{functionEnvironmentID}}\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{manageURL}}/v1/functions",
					"host": [
						"{{manageURL}}"
					],
					"path": [
						"v1",
						"functions"
					]
				}
			},
			"response": [
				{
					"name": "Function: Create",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "X-SKYFLOW-ACCOUNT-ID",
								"value": "{{accountID}}",
								"type": "text"
							},
							{
								"key": "X-REQUEST-FUNCTION-API-KEY",
								"value": "{{functionToken}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Mastercom Function\",\n    \"description\": \"Function to invoke Mastercom\",\n    \"code\": \"const axios = require('axios');\\nconst oauth = require('mastercard-oauth1-signer');\\n\\nconst { signingKey, consumerKey, vaultID, vaultURL} = process.env;\\n\\n// Don't change the function name. It needs to be skyflowmain.\\nexports.skyflowmain = async (event) => {\\n  // Use request to access the connection payload.\\n  const request = Buffer.from(event.BodyContent, \\\"base64\\\");\\n  const payload = JSON.parse(request.toString());\\n\\n  // Use headers to access the connection headers.\\n  const headers = event.Headers;\\n  const authorizationHeaderValue = headers['X-Skyflow-Authorization'];\\n  const accessToken = authorizationHeaderValue[0];\\n\\n  const uri = event.QueryParam.URI;\\n  const uri_method = headers['X-Request-Audit-Uri-Method'];\\n  const method = uri_method[0];\\n  //console.log(\\\"params: \\\" + method + \\\" \\\" + uri);\\n\\n    if (payload.primaryAccountNum){\\n    let response = await detokenize(accessToken, payload.primaryAccountNum);\\n    //console.log(\\\"resp value: \\\" + response.data.records[0].value);\\n    payload.primaryAccountNum = response.data.records[0].value;}\\n\\n  let data = JSON.stringify(payload);\\n  //console.log(\\\"Payload= \\\", data);\\n\\n  const authHeader = oauth.getAuthorizationHeader(uri, method, data, consumerKey, signingKey);\\n  //console.log(\\\"OAuth Header= \\\", authHeader);\\n\\nconst response = await callMastercom(uri, method, data, authHeader);\\n//console.log(\\\"Before Exit: \\\", response);\\nreturn response;\\n}\\n\\n\\nasync function callMastercom(uri, method, data, authHeader) {\\n\\nlet config = {\\n  method: method,\\n  maxBodyLength: Infinity,\\n  url: uri,\\n  headers: { \\n    'Authorization': authHeader, \\n    'Content-Type': 'application/json',\\n  },\\n  data : data\\n};\\n\\nconsole.log(\\\"About to Call Axios\\\");\\nreturn await axios.request(config)\\n.then((response) => {\\n  //console.log(\\\"Mastercom: \\\", JSON.stringify(response.data));\\n  return response.data;\\n})\\n.catch((error) => {\\n  console.log(error);\\n  return error;\\n});\\n\\n}\\n\\nasync function detokenize(accessToken, tokenized_pan) {\\n    const url = vaultURL + \\\"/v1/vaults/\\\" + vaultID + \\\"/detokenize\\\";\\n    const headers = {\\n        'Authorization': 'Bearer ' + accessToken, // Replace with your actual token\\n        'Content-Type': 'application/json' // Specify the content type\\n    };\\n    const body = {\\n    \\\"detokenizationParameters\\\": [\\n        {\\n            \\\"token\\\": tokenized_pan,\\n            \\\"redaction\\\":\\\"PLAIN_TEXT\\\"\\n        }\\n    ]\\n};\\n\\n    try {\\n        const resp = await axios.post(url, body, { headers });\\n        //console.log('Response:', resp.data);\\n        return resp;\\n        // Handle response data here\\n    } catch (error) {\\n        console.error('Error making the request:', error.message);\\n        // Handle error here\\n    }\\n\\n}\",\n    \"functionConfigs\": [\n        {\n            \"methodName\": \"\",\n            \"handlerName\": \"\",\n            \"variables\": [\n            ],\n            \"resourceConfig\": {\n                \"timeout\": 800,\n                \"memory\": 1000\n            }\n        }\n    ],\n    \"language\": {\n        \"languageName\": \"NODEJS\",\n        \"languageVersion\": \"16.x\"\n    },\n    \"dependencies\": [\"mastercard-oauth1-signer@1.1.6\", \"axios@1.6.5\"],\n    \"functionDeployment\": {\n        \"deploy\": false,\n        \"functionEnvironmentID\": \"{{functionEnvironmentID}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{manageURL}}/v1/functions",
							"host": [
								"{{manageURL}}"
							],
							"path": [
								"v1",
								"functions"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 05 Mar 2025 01:59:32 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-request-id",
							"value": "c1eba176-d37d-4b46-966d-19a6c841720d"
						},
						{
							"key": "x-skyflow-trace-id",
							"value": "8bff00a95f8958c1a871c3a38c1864a7"
						},
						{
							"key": "x-envoy-upstream-service-time",
							"value": "397"
						},
						{
							"key": "strict-transport-security",
							"value": "max-age=31536000; includeSubDomains; preload"
						},
						{
							"key": "content-security-policy",
							"value": "frame-ancestors none;"
						},
						{
							"key": "x-frame-options",
							"value": "deny"
						},
						{
							"key": "x-xss-protection",
							"value": "1; mode=block"
						},
						{
							"key": "x-content-type-options",
							"value": "nosniff"
						},
						{
							"key": "referrer-policy",
							"value": "no-referrer"
						},
						{
							"key": "x-download-options",
							"value": "noopen"
						},
						{
							"key": "x-dns-prefetch-control",
							"value": "off"
						},
						{
							"key": "permissions-policy",
							"value": "camera 'none';microphone 'none';geolocation 'none';encrypted-media 'none';payment 'none';speaker 'none';usb 'none';"
						},
						{
							"key": "CF-Cache-Status",
							"value": "DYNAMIC"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "91b603ba2e547157-YUL"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						}
					],
					"cookie": [],
					"body": "{\n    \"ID\": \"s2d265e2539e43ca970ef9874f25f770\",\n    \"name\": \"Mastercom Function\",\n    \"versionTag\": \"1\",\n    \"deploymentID\": \"\"\n}"
				}
			]
		},
		{
			"name": "FunctionDeployment: Deploy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var vardata = JSON.parse(responseBody);",
							"pm.environment.set(\"deploymentID\", vardata.functionDeploymentID);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-SKYFLOW-ACCOUNT-ID",
						"value": "{{accountID}}",
						"type": "text"
					},
					{
						"key": "X-REQUEST-FUNCTION-API-KEY",
						"value": "{{functionToken}}",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Selective Tokenization Deployment\",\n    \"description\": \"Function Deployment for selective tokenization usecase\",\n    \"functionEnvironmentID\": \"{{functionEnvironmentID}}\",\n    \"functionID\": \"{{functionID}}\",\n    \"versionTag\": \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{manageURL}}/v1/functionDeployments",
					"host": [
						"{{manageURL}}"
					],
					"path": [
						"v1",
						"functionDeployments"
					]
				}
			},
			"response": [
				{
					"name": "FunctionDeployment: Deploy",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "X-SKYFLOW-ACCOUNT-ID",
								"value": "{{accountID}}",
								"type": "text"
							},
							{
								"key": "X-REQUEST-FUNCTION-API-KEY",
								"value": "{{functionToken}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Selective Tokenization Deployment\",\n    \"description\": \"Function Deployment for selective tokenization usecase\",\n    \"functionEnvironmentID\": \"{{functionEnvironmentID}}\",\n    \"functionID\": \"{{functionID}}\",\n    \"versionTag\": \"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{manageURL}}/v1/functionDeployments",
							"host": [
								"{{manageURL}}"
							],
							"path": [
								"v1",
								"functionDeployments"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 05 Mar 2025 01:59:40 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-request-id",
							"value": "58b1c017-5568-4822-89ed-1f01f9658c68"
						},
						{
							"key": "x-skyflow-trace-id",
							"value": "d7b12921413537c130b39039d3f664be"
						},
						{
							"key": "x-envoy-upstream-service-time",
							"value": "386"
						},
						{
							"key": "strict-transport-security",
							"value": "max-age=31536000; includeSubDomains; preload"
						},
						{
							"key": "content-security-policy",
							"value": "frame-ancestors none;"
						},
						{
							"key": "x-frame-options",
							"value": "deny"
						},
						{
							"key": "x-xss-protection",
							"value": "1; mode=block"
						},
						{
							"key": "x-content-type-options",
							"value": "nosniff"
						},
						{
							"key": "referrer-policy",
							"value": "no-referrer"
						},
						{
							"key": "x-download-options",
							"value": "noopen"
						},
						{
							"key": "x-dns-prefetch-control",
							"value": "off"
						},
						{
							"key": "permissions-policy",
							"value": "camera 'none';microphone 'none';geolocation 'none';encrypted-media 'none';payment 'none';speaker 'none';usb 'none';"
						},
						{
							"key": "cf-cache-status",
							"value": "DYNAMIC"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "91b603eb9ee67157-YUL"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						}
					],
					"cookie": [],
					"body": "{\n    \"functionDeploymentID\": \"nc61499479714ad4b07af25c45a0cc8b\",\n    \"status\": \"PENDING\"\n}"
				}
			]
		},
		{
			"name": "FunctionDeployment: Confirm Status Active",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-SKYFLOW-ACCOUNT-ID",
						"value": "{{accountID}}",
						"type": "text"
					},
					{
						"key": "X-REQUEST-FUNCTION-API-KEY",
						"value": "{{functionToken}}",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{manageURL}}/v1/functionDeployments/{{deploymentID}}",
					"host": [
						"{{manageURL}}"
					],
					"path": [
						"v1",
						"functionDeployments",
						"{{deploymentID}}"
					]
				}
			},
			"response": [
				{
					"name": "FunctionDeployment: Confirm Status Active",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "X-SKYFLOW-ACCOUNT-ID",
								"value": "{{accountID}}",
								"type": "text"
							},
							{
								"key": "X-REQUEST-FUNCTION-API-KEY",
								"value": "{{functionToken}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{manageURL}}/v1/functionDeployments/{{deploymentID}}",
							"host": [
								"{{manageURL}}"
							],
							"path": [
								"v1",
								"functionDeployments",
								"{{deploymentID}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 05 Mar 2025 02:00:29 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-request-id",
							"value": "7b8a45a3-ba8b-41b3-b4de-8d4d30169ac3"
						},
						{
							"key": "x-skyflow-trace-id",
							"value": "813a71ced657603626135e6eb18b5526"
						},
						{
							"key": "x-envoy-upstream-service-time",
							"value": "146"
						},
						{
							"key": "strict-transport-security",
							"value": "max-age=31536000; includeSubDomains; preload"
						},
						{
							"key": "content-security-policy",
							"value": "frame-ancestors none;"
						},
						{
							"key": "x-frame-options",
							"value": "deny"
						},
						{
							"key": "x-xss-protection",
							"value": "1; mode=block"
						},
						{
							"key": "x-content-type-options",
							"value": "nosniff"
						},
						{
							"key": "referrer-policy",
							"value": "no-referrer"
						},
						{
							"key": "x-download-options",
							"value": "noopen"
						},
						{
							"key": "x-dns-prefetch-control",
							"value": "off"
						},
						{
							"key": "permissions-policy",
							"value": "camera 'none';microphone 'none';geolocation 'none';encrypted-media 'none';payment 'none';speaker 'none';usb 'none';"
						},
						{
							"key": "cf-cache-status",
							"value": "DYNAMIC"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "91b605200df57157-YUL"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						}
					],
					"cookie": [],
					"body": "{\n    \"ID\": \"nc61499479714ad4b07af25c45a0cc8b\",\n    \"name\": \"Selective Tokenization Deployment\",\n    \"functionID\": \"s2d265e2539e43ca970ef9874f25f770\",\n    \"versionTag\": \"1\",\n    \"functionEnvironmentID\": \"eb21631a279247d4aa63cfcd922a2f23\",\n    \"status\": \"ACTIVE\",\n    \"methodNames\": [\n        \"\"\n    ],\n    \"BasicAudit\": {\n        \"CreatedBy\": \"l49b9b48072a4cf6aeda8397e2159532\",\n        \"CreatedOn\": \"2025-03-05 01:59:40.195303274 +0000 UTC\",\n        \"LastModifiedOn\": \"2025-03-05 02:00:17.076292919 +0000 UTC\"\n    },\n    \"errorMessage\": \"Successful\",\n    \"regionID\": \"l0f36c510c3643d8b5df45aa58e91909\",\n    \"functionEnvironmentName\": \"mastercom_env\",\n    \"description\": \"Function Deployment for selective tokenization usecase\"\n}"
				}
			]
		},
		{
			"name": "insert card",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "X-SKYFLOW-ACCOUNT-ID",
						"value": "{{accountID}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"quorum\": false,\n    \"records\": [\n        {\n            \"fields\": {\n                \"card_number\": \"4111111111111111\"\n            }\n        }\n    ],\n    \"tokenization\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{vaultURL}}/v1/vaults/{{vaultID}}/cards",
					"host": [
						"{{vaultURL}}"
					],
					"path": [
						"v1",
						"vaults",
						"{{vaultID}}",
						"cards"
					]
				}
			},
			"response": [
				{
					"name": "insert card",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-SKYFLOW-ACCOUNT-ID",
								"value": "{{accountID}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"quorum\": false,\n    \"records\": [\n        {\n            \"fields\": {\n                \"card_number\": \"4111111111111111\"\n            }\n        }\n    ],\n    \"tokenization\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{vaultURL}}/v1/vaults/{{vaultID}}/cards",
							"host": [
								"{{vaultURL}}"
							],
							"path": [
								"v1",
								"vaults",
								"{{vaultID}}",
								"cards"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Tue, 04 Mar 2025 18:42:38 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-request-id",
							"value": "71c3f266-2eca-4497-8fcd-fa42c0acba42"
						},
						{
							"key": "x-skyflow-trace-id",
							"value": "54344addb7b0111c2e36e4757aabc6d2"
						},
						{
							"key": "x-envoy-upstream-service-time",
							"value": "15"
						},
						{
							"key": "strict-transport-security",
							"value": "max-age=31536000; includeSubDomains; preload"
						},
						{
							"key": "content-security-policy",
							"value": "frame-ancestors none;"
						},
						{
							"key": "x-frame-options",
							"value": "deny"
						},
						{
							"key": "x-xss-protection",
							"value": "1; mode=block"
						},
						{
							"key": "x-content-type-options",
							"value": "nosniff"
						},
						{
							"key": "referrer-policy",
							"value": "no-referrer"
						},
						{
							"key": "x-download-options",
							"value": "noopen"
						},
						{
							"key": "x-dns-prefetch-control",
							"value": "off"
						},
						{
							"key": "permissions-policy",
							"value": "camera 'none';microphone 'none';geolocation 'none';encrypted-media 'none';payment 'none';speaker 'none';usb 'none';"
						},
						{
							"key": "cf-cache-status",
							"value": "DYNAMIC"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "91b383bdf8c7a2a8-YUL"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						}
					],
					"cookie": [],
					"body": "{\n    \"records\": [\n        {\n            \"skyflow_id\": \"8f506639-1a36-4d66-bef0-6544b816b40a\",\n            \"tokens\": {\n                \"card_number\": \"1868177883295213\"\n            }\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Connection: Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var vardata = JSON.parse(responseBody);",
							"pm.environment.set(\"connectionID\", vardata.ID);",
							"pm.environment.set(\"connectionURL\", vardata.connectionURL);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-SKYFLOW-ACCOUNT-ID",
						"value": "{{accountID}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"name\": \"Mastercom APIs\",\n        \"description\": \"Mastercom Services\",\n        \"baseURL\": \"\",\n        \"vaultID\": \"{{vaultID}}\",\n        \"mode\": \"INGRESS\",\n        \"routes\": [\n            {\n                \"name\": \"Invoke Mastercom\",\n                \"description\": \"Execute a request against Mastercom.\",\n                \"path\": \"/mastercom\",\n                \"method\": \"POST\",\n                \"requestBody\": [\n                    {\n                        \"action\": \"FUNCTION\",\n                        \"functionInfo\": {\n\t\t\t\t\t\t\t\"deploymentID\": \"{{deploymentID}}\",\n\t\t\t\t\t\t\t\"method\": \"skyflowmain\"\n\t\t\t\t\t\t}\n                    }\n                ]\n            }\n        ],\n        \"authMode\": \"NOAUTH\"\n\t}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{manageURL}}/v1/gateway/inboundRoutes",
					"host": [
						"{{manageURL}}"
					],
					"path": [
						"v1",
						"gateway",
						"inboundRoutes"
					]
				}
			},
			"response": [
				{
					"name": "Connection: Create",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "X-SKYFLOW-ACCOUNT-ID",
								"value": "{{accountID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"Mastercom APIs\",\n        \"description\": \"Mastercom Services\",\n        \"baseURL\": \"\",\n        \"vaultID\": \"{{vaultID}}\",\n        \"mode\": \"INGRESS\",\n        \"routes\": [\n            {\n                \"name\": \"Invoke Mastercom\",\n                \"description\": \"Execute a request against Mastercom.\",\n                \"path\": \"/mastercom\",\n                \"method\": \"POST\",\n                \"requestBody\": [\n                    {\n                        \"action\": \"FUNCTION\",\n                        \"functionInfo\": {\n\t\t\t\t\t\t\t\"deploymentID\": \"{{deploymentID}}\",\n\t\t\t\t\t\t\t\"method\": \"skyflowmain\"\n\t\t\t\t\t\t}\n                    }\n                ]\n            }\n        ],\n        \"authMode\": \"NOAUTH\"\n\t}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{manageURL}}/v1/gateway/inboundRoutes",
							"host": [
								"{{manageURL}}"
							],
							"path": [
								"v1",
								"gateway",
								"inboundRoutes"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 05 Mar 2025 02:00:17 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-request-id",
							"value": "4dd4bc2c-fcff-4b99-be18-315e9edcd1b8"
						},
						{
							"key": "x-skyflow-trace-id",
							"value": "d6cf0c567a9fcb60379913dc54f070f1"
						},
						{
							"key": "x-envoy-upstream-service-time",
							"value": "428"
						},
						{
							"key": "strict-transport-security",
							"value": "max-age=31536000; includeSubDomains; preload"
						},
						{
							"key": "content-security-policy",
							"value": "frame-ancestors none;"
						},
						{
							"key": "x-frame-options",
							"value": "deny"
						},
						{
							"key": "x-xss-protection",
							"value": "1; mode=block"
						},
						{
							"key": "x-content-type-options",
							"value": "nosniff"
						},
						{
							"key": "referrer-policy",
							"value": "no-referrer"
						},
						{
							"key": "x-download-options",
							"value": "noopen"
						},
						{
							"key": "x-dns-prefetch-control",
							"value": "off"
						},
						{
							"key": "permissions-policy",
							"value": "camera 'none';microphone 'none';geolocation 'none';encrypted-media 'none';payment 'none';speaker 'none';usb 'none';"
						},
						{
							"key": "cf-cache-status",
							"value": "DYNAMIC"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "91b604d059317157-YUL"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						}
					],
					"cookie": [],
					"body": "{\n    \"ID\": \"cfade841edc54c9ba504f62f92adab73\",\n    \"connectionURL\": \"https://ebfc9bee4242.gateway.skyflowapis.com/v1/gateway/inboundRoutes/cfade841edc54c9ba504f62f92adab73\"\n}"
				}
			]
		},
		{
			"name": "Connection: Invoke",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth oauth_body_hash=\"U5BtxC0KDIt9ZbCzRT4mu7R+N3/GU+LbyKQsZYjg40E=\",oauth_consumer_key=\"eLOhQ1mI8g9RdeaCOqExkl9j1lqKqxVL84g6vLxj0e7534eb!f344280eee1a41c9b91f38be3789a0d40000000000000000\",oauth_nonce=\"SQSgBhIG\",oauth_signature_method=\"RSA-SHA256\",oauth_timestamp=\"1713198070\",oauth_version=\"1.0\",oauth_signature=\"B6hXPa9D0svPhIvJHjQ9BgtwrBX0R2iBK1IJQm5EuX4zfFkWOE7C9xYHyocTX54xuor3CnPti1dlZTkLy42a%2BAK5vRz2pu6BNgevjLl83WTXwbPQFgpseDSTIt3DBOuwGe4Seyn7tHrNJTC013WOIXOwDUFmIO6sSYLVl3jEX%2F1G9deY0of6sVGaX8OREZXPBQPdjcPjrnJjP%2B%2BhTFDlwpWXncE2rID0QauSpGKlZVwqkv6wgjgH49NkmUZd%2FY0cfjZf%2F3IJzfz9wtNEKiJhCTD%2BR8Rp%2FODhRedSIWNJShqIbEASHSKMGteLn37oH8wX%2Fi3BsNKcooIYIQcXah5uRQ%3D%3D\"",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "CBKLB=!ZJdPS8wkBADVUFbTBGv8AEvQkiMqfYFRGXWNiRQQlks84ukGbcJM9l3O2tvX/Cru7okjwOr8vv6p8hs=; TS01c106a3=0129c5f8e1bc7a507bcceefc78265281b6d1baefdc645833e4086eb9b7bdfe97bea8a15784b87b4218f88c5aded19137f2355ae0a4",
						"disabled": true
					},
					{
						"key": "X-Skyflow-Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-SKYFLOW-ACCOUNT-ID",
						"value": "{{accountID}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"acquirerRefNumber\":\"05436847276000293995738\",\"primaryAccountNum\":\"1868177883295213\",\"transAmountFrom\":\"10000\",\"transAmountTo\":\"20050\",\"tranStartDate\":\"2024-02-17\",\"tranEndDate\":\"2024-03-17\"}"
				},
				"url": {
					"raw": "{{connectionURL}}/mastercom?URI=https://sandbox.api.mastercard.com/mastercom/v6/transactions/search",
					"host": [
						"{{connectionURL}}"
					],
					"path": [
						"mastercom"
					],
					"query": [
						{
							"key": "URI",
							"value": "https://sandbox.api.mastercard.com/mastercom/v6/transactions/search"
						}
					]
				}
			},
			"response": [
				{
					"name": "Connection: Invoke",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth oauth_body_hash=\"U5BtxC0KDIt9ZbCzRT4mu7R+N3/GU+LbyKQsZYjg40E=\",oauth_consumer_key=\"eLOhQ1mI8g9RdeaCOqExkl9j1lqKqxVL84g6vLxj0e7534eb!f344280eee1a41c9b91f38be3789a0d40000000000000000\",oauth_nonce=\"SQSgBhIG\",oauth_signature_method=\"RSA-SHA256\",oauth_timestamp=\"1713198070\",oauth_version=\"1.0\",oauth_signature=\"B6hXPa9D0svPhIvJHjQ9BgtwrBX0R2iBK1IJQm5EuX4zfFkWOE7C9xYHyocTX54xuor3CnPti1dlZTkLy42a%2BAK5vRz2pu6BNgevjLl83WTXwbPQFgpseDSTIt3DBOuwGe4Seyn7tHrNJTC013WOIXOwDUFmIO6sSYLVl3jEX%2F1G9deY0of6sVGaX8OREZXPBQPdjcPjrnJjP%2B%2BhTFDlwpWXncE2rID0QauSpGKlZVwqkv6wgjgH49NkmUZd%2FY0cfjZf%2F3IJzfz9wtNEKiJhCTD%2BR8Rp%2FODhRedSIWNJShqIbEASHSKMGteLn37oH8wX%2Fi3BsNKcooIYIQcXah5uRQ%3D%3D\"",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "CBKLB=!ZJdPS8wkBADVUFbTBGv8AEvQkiMqfYFRGXWNiRQQlks84ukGbcJM9l3O2tvX/Cru7okjwOr8vv6p8hs=; TS01c106a3=0129c5f8e1bc7a507bcceefc78265281b6d1baefdc645833e4086eb9b7bdfe97bea8a15784b87b4218f88c5aded19137f2355ae0a4",
								"disabled": true
							},
							{
								"key": "X-Skyflow-Authorization",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2MiOiJyZDY2NWU2NWUxZTE0MTRiOTcwZTU2NzU5Nzg2MTg5MSIsImF1ZCI6Imh0dHBzOi8vbWFuYWdlLnNreWZsb3dhcGlzLmNvbSIsImV4cCI6MTc0MTE5NzAzNCwiaWF0IjoxNzQxMTEwNjM0LCJpc3MiOiJzYS1hdXRoQG1hbmFnZS5za3lmbG93YXBpcy5jb20iLCJqdGkiOiJiNjZhNmQ1MTZjOWI0ZDc2OWNmNGFjZjFkN2FmMGY3NCIsInN1YiI6Imw0OWI5YjQ4MDcyYTRjZjZhZWRhODM5N2UyMTU5NTMyIn0.PYZloo2NlldKtAkoHSnE5I4dWeFpYi1gjGxH5EcVwUfQygVqFiHhIN6tAtqG6ztMHD8HQALjT9pzzbxm7SJQQ4c3NPgmTJyCr_9_249-5-XYZNvb3HP86tS3aaGKv9TcmgaQ3X8z0LL092af-UtEHmTNp7bACpv46weZJiQGbROy1g5ThavXgMWCXHrxfqG-uPL007b1hWrZAAHuQdrL90jqnwdKBswV72SF0hT_a_Yz4vGcixfu775OanaZ9n448aAX2EnhLk6ez6VO5w_atraLMrvcmmhW40dAplNyGC4mglHbl9W-F3_yNaJf2astRsweyAOJnrgUY9PacyMAfQ",
								"type": "text"
							},
							{
								"key": "X-SKYFLOW-ACCOUNT-ID",
								"value": "{{accountID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"acquirerRefNumber\":\"05436847276000293995738\",\"primaryAccountNum\":\"1868177883295213\",\"transAmountFrom\":\"10000\",\"transAmountTo\":\"20050\",\"tranStartDate\":\"2024-02-17\",\"tranEndDate\":\"2024-03-17\"}"
						},
						"url": {
							"raw": "{{connectionURL}}/mastercom?URI=https://sandbox.api.mastercard.com/mastercom/v6/transactions/search",
							"host": [
								"{{connectionURL}}"
							],
							"path": [
								"mastercom"
							],
							"query": [
								{
									"key": "URI",
									"value": "https://sandbox.api.mastercard.com/mastercom/v6/transactions/search"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 05 Mar 2025 02:00:36 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "accept",
							"value": "*/*"
						},
						{
							"key": "accept-encoding",
							"value": "gzip, br"
						},
						{
							"key": "authorization",
							"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2MiOiJyZDY2NWU2NWUxZTE0MTRiOTcwZTU2NzU5Nzg2MTg5MSIsImF1ZCI6Imh0dHBzOi8vbWFuYWdlLnNreWZsb3dhcGlzLmNvbSIsImV4cCI6MTc0MTE5NzAzNCwiaWF0IjoxNzQxMTEwNjM0LCJpc3MiOiJzYS1hdXRoQG1hbmFnZS5za3lmbG93YXBpcy5jb20iLCJqdGkiOiJiNjZhNmQ1MTZjOWI0ZDc2OWNmNGFjZjFkN2FmMGY3NCIsInN1YiI6Imw0OWI5YjQ4MDcyYTRjZjZhZWRhODM5N2UyMTU5NTMyIn0.PYZloo2NlldKtAkoHSnE5I4dWeFpYi1gjGxH5EcVwUfQygVqFiHhIN6tAtqG6ztMHD8HQALjT9pzzbxm7SJQQ4c3NPgmTJyCr_9_249-5-XYZNvb3HP86tS3aaGKv9TcmgaQ3X8z0LL092af-UtEHmTNp7bACpv46weZJiQGbROy1g5ThavXgMWCXHrxfqG-uPL007b1hWrZAAHuQdrL90jqnwdKBswV72SF0hT_a_Yz4vGcixfu775OanaZ9n448aAX2EnhLk6ez6VO5w_atraLMrvcmmhW40dAplNyGC4mglHbl9W-F3_yNaJf2astRsweyAOJnrgUY9PacyMAfQ"
						},
						{
							"key": "cdn-loop",
							"value": "cloudflare; loops=1"
						},
						{
							"key": "cf-connecting-ip",
							"value": "142.119.126.250"
						},
						{
							"key": "cf-ipcountry",
							"value": "CA"
						},
						{
							"key": "permissions-policy",
							"value": "camera 'none';microphone 'none';geolocation 'none';encrypted-media 'none';payment 'none';speaker 'none';usb 'none';"
						},
						{
							"key": "cf-visitor",
							"value": "{\"scheme\":\"https\"}"
						},
						{
							"key": "postman-token",
							"value": "0031d05c-fec6-4e18-8878-512c6bbede28"
						},
						{
							"key": "route-found",
							"value": "/mastercom"
						},
						{
							"key": "user-agent",
							"value": "PostmanRuntime/7.43.0"
						},
						{
							"key": "x-envoy-attempt-count",
							"value": "1"
						},
						{
							"key": "x-envoy-external-address",
							"value": "162.158.127.87"
						},
						{
							"key": "x-forwarded-client-cert",
							"value": "By=spiffe://cluster.local/ns/platform/sa/relay-service-sa;Hash=23707846c5fd0f5310b837c24a1b931dbb2567b606668f676361fd1ce4ce9e77;Subject=\"\";URI=spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"
						},
						{
							"key": "x-forwarded-for",
							"value": "142.119.126.250,162.158.127.87"
						},
						{
							"key": "x-forwarded-proto",
							"value": "http"
						},
						{
							"key": "x-request-id",
							"value": "c835ec65-b927-44fc-af6d-647ae9ae1eaa,c835ec65-b927-44fc-af6d-647ae9ae1eaa"
						},
						{
							"key": "x-skyflow-account-id",
							"value": "rd665e65e1e1414b970e567597861891"
						},
						{
							"key": "x-skyflow-trace-id",
							"value": ""
						},
						{
							"key": "x-envoy-upstream-service-time",
							"value": "3153"
						},
						{
							"key": "strict-transport-security",
							"value": "max-age=31536000; includeSubDomains; preload"
						},
						{
							"key": "content-security-policy",
							"value": "frame-ancestors none;"
						},
						{
							"key": "x-frame-options",
							"value": "deny"
						},
						{
							"key": "x-xss-protection",
							"value": "1; mode=block"
						},
						{
							"key": "x-content-type-options",
							"value": "nosniff"
						},
						{
							"key": "referrer-policy",
							"value": "no-referrer"
						},
						{
							"key": "x-download-options",
							"value": "noopen"
						},
						{
							"key": "x-dns-prefetch-control",
							"value": "off"
						},
						{
							"key": "cf-cache-status",
							"value": "DYNAMIC"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "91b605363967a313-YUL"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						}
					],
					"cookie": [],
					"body": "{\n    \"authorizationSummaryCount\": \"1\",\n    \"message\": \"Search returned 1 records.\",\n    \"authorizationSummary\": [\n        {\n            \"originalMessageTypeIdentifier\": \"0110\",\n            \"banknetDate\": \"240301\",\n            \"transactionAmountUsd\": \"147.63\",\n            \"primaryAccountNumber\": \"4111111111111111\",\n            \"processingCode\": \"00\",\n            \"transactionAmountLocal\": \"000000014763\",\n            \"authorizationDateAndTime\": \"0301110615\",\n            \"track2\": \"N\",\n            \"authenticationId\": \"42283B\",\n            \"cardAcceptorName\": \"Foot Locker\",\n            \"cardAcceptorCity\": \"JACKSONVILLE\",\n            \"cardAcceptorState\": \"FL\",\n            \"track1\": \"N\",\n            \"currencyCode\": \"840\",\n            \"chipPresent\": \"N\",\n            \"transactionId\": \"jBF_61Z3N2sEZSfyw5EgXtC7r53xRUgw_Y_cKpHc8dZFj6pPLt2Ft1yLSc93zgi2DdQYDzxVh_MlLaMO2Zs4u==\",\n            \"clearingSummary\": [\n                {\n                    \"primaryAccountNumber\": \"4111111111111111\",\n                    \"transactionAmountLocal\": \"14763\",\n                    \"dateAndTimeLocal\": \"240301110615\",\n                    \"cardDataInputCapability\": \"6\",\n                    \"cardholderAuthenticationCapability\": \"1\",\n                    \"cardPresent\": \"0\",\n                    \"acquirerReferenceNumber\": \"05436847276000293995738\",\n                    \"cardAcceptorName\": \"Foot Locker\",\n                    \"currencyCode\": \"840\",\n                    \"transactionId\": \"rx1l5+qn3zuS5c50yop+18uOxybY7aAwIx7DOyRmjnCwIDOrKR34q7Axdr+saH1Y+Vl9lwc4oh6YoWKPMk+0f==\",\n                    \"installmentPaymentDataBrazil\": \"3317631522738945250588569294589760803818450802121439420\",\n                    \"settlementIndicator\": \"M\",\n                    \"messageReversalIndicator\": \"R\"\n                }\n            ]\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Function: Logs",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-SKYFLOW-ACCOUNT-ID",
						"value": "{{accountID}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{manageURL}}/v1/functionDeployments/{{deploymentID}}/logs",
					"host": [
						"{{manageURL}}"
					],
					"path": [
						"v1",
						"functionDeployments",
						"{{deploymentID}}",
						"logs"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}